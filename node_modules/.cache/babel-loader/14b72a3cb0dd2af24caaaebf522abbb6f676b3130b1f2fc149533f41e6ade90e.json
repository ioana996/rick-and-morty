{"ast":null,"code":"var _jsxFileName = \"/Users/ioanastroinea/Documents/React Portfolio/rick-morty/src/components/Cards/Cards.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  let {\n    results\n  } = _ref;\n  let display;\n  console.log(results);\n  if (results) {\n    display = results.map(result => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: result.image,\n            alt: \"\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-4 fw-bold mb-4\",\n              children: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-6\",\n                children: \"Last location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-5\",\n                children: result.location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge bg-danger\",\n          children: \"Danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    display = \"No characters found! :(\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Cards","results","display","console","log","map","result","image","name","location","id"],"sources":["/Users/ioanastroinea/Documents/React Portfolio/rick-morty/src/components/Cards/Cards.js"],"sourcesContent":["import React from \"react\";\n\nconst Cards = ({ results }) => {\n  let display;\n  console.log(results);\n\n  if (results) {\n    display = results.map((result) => {\n      return (\n        <div key={result.id} className=\"col-4 position-relative\">\n          <div className=\"\">\n            <img src={result.image} alt=\"\" className=\"img-fluid\" />\n            <div className=\"content\">\n              <div className=\"fs-4 fw-bold mb-4\">{result.name}</div>\n              <div className=\"\">\n                <div className=\"fs-6\">Last location</div>\n                <div className=\"fs-5\">{result.location.name}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"badge bg-danger\">Danger</div>\n        </div>\n      );\n    });\n  } else {\n    display = \"No characters found! :(\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Cards;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,KAAK,GAAG,QAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACxB,IAAIC,OAAO;EACXC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EAEpB,IAAIA,OAAO,EAAE;IACXC,OAAO,GAAGD,OAAO,CAACI,GAAG,CAAEC,MAAM,IAAK;MAChC,oBACE;QAAqB,SAAS,EAAC,yBAAyB;QAAA,wBACtD;UAAK,SAAS,EAAC,EAAE;UAAA,wBACf;YAAK,GAAG,EAAEA,MAAM,CAACC,KAAM;YAAC,GAAG,EAAC,EAAE;YAAC,SAAS,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAG,eACvD;YAAK,SAAS,EAAC,SAAS;YAAA,wBACtB;cAAK,SAAS,EAAC,mBAAmB;cAAA,UAAED,MAAM,CAACE;YAAI;cAAA;cAAA;cAAA;YAAA,QAAO,eACtD;cAAK,SAAS,EAAC,EAAE;cAAA,wBACf;gBAAK,SAAS,EAAC,MAAM;gBAAA,UAAC;cAAa;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACzC;gBAAK,SAAS,EAAC,MAAM;gBAAA,UAAEF,MAAM,CAACG,QAAQ,CAACD;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAO;YAAA;cAAA;cAAA;cAAA;YAAA,QAC9C;UAAA;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAK,SAAS,EAAC,iBAAiB;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAXrCF,MAAM,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAYb;IAEV,CAAC,CAAC;EACJ,CAAC,MAAM;IACLR,OAAO,GAAG,yBAAyB;EACrC;EAEA,oBAAO;IAAA,UAAGA;EAAO,iBAAI;AACvB,CAAC;AAAC,KA3BIF,KAAK;AA6BX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}