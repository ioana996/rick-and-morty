{"ast":null,"code":"var _jsxFileName = \"/Users/ioanastroinea/Documents/React Portfolio/rick-morty/src/components/Cards/Cards.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Cards.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  let {\n    results,\n    page\n  } = _ref;\n  let display;\n  console.log(results);\n  if (results) {\n    display = results.map(result => {\n      let {\n        id,\n        name,\n        image,\n        location,\n        status\n      } = result;\n      let badgeType;\n      if (result.status === \"Alive\") {\n        badgeType = \"success\";\n      } else if (result.status === \"Dead\") {\n        badgeType = \"danger\";\n      } else {\n        badgeType = \"secondary\";\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 mb-4 position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cards,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"\",\n            className: `${styles.img} img-fluid`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"10px\"\n            },\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-4 fw-bold mb-4\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-6\",\n                children: \"Last location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-5\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.badge} badge bg-${badgeType} position-absolute`,\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    display = \"No characters found! :(\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Link","styles","Cards","results","page","display","console","log","map","result","id","name","image","location","status","badgeType","cards","img","padding","badge"],"sources":["/Users/ioanastroinea/Documents/React Portfolio/rick-morty/src/components/Cards/Cards.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Cards.module.scss\";\n\nconst Cards = ({ results, page }) => {\n  let display;\n  console.log(results);\n\n  if (results) {\n    display = results.map((result) => {\n      let { id, name, image, location, status } = result;\n\n      let badgeType;\n\n      if (result.status === \"Alive\") {\n        badgeType = \"success\";\n      } else if (result.status === \"Dead\") {\n        badgeType = \"danger\";\n      } else {\n        badgeType = \"secondary\";\n      }\n\n      return (\n        <div key={id} className=\"col-4 mb-4 position-relative\">\n          <div className={styles.cards}>\n            <img src={image} alt=\"\" className={`${styles.img} img-fluid`} />\n            <div style={{ padding: \"10px\" }} className=\"content\">\n              <div className=\"fs-4 fw-bold mb-4\">{name}</div>\n              <div className=\"\">\n                <div className=\"fs-6\">Last location</div>\n                <div className=\"fs-5\">{location.name}</div>\n              </div>\n            </div>\n          </div>\n          <div\n            className={`${styles.badge} badge bg-${badgeType} position-absolute`}\n          >\n            {status}\n          </div>\n        </div>\n      );\n    });\n  } else {\n    display = \"No characters found! :(\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Cards;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAEzC,MAAMC,KAAK,GAAG,QAAuB;EAAA,IAAtB;IAAEC,OAAO;IAAEC;EAAK,CAAC;EAC9B,IAAIC,OAAO;EACXC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EAEpB,IAAIA,OAAO,EAAE;IACXE,OAAO,GAAGF,OAAO,CAACK,GAAG,CAAEC,MAAM,IAAK;MAChC,IAAI;QAAEC,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAO,CAAC,GAAGL,MAAM;MAElD,IAAIM,SAAS;MAEb,IAAIN,MAAM,CAACK,MAAM,KAAK,OAAO,EAAE;QAC7BC,SAAS,GAAG,SAAS;MACvB,CAAC,MAAM,IAAIN,MAAM,CAACK,MAAM,KAAK,MAAM,EAAE;QACnCC,SAAS,GAAG,QAAQ;MACtB,CAAC,MAAM;QACLA,SAAS,GAAG,WAAW;MACzB;MAEA,oBACE;QAAc,SAAS,EAAC,8BAA8B;QAAA,wBACpD;UAAK,SAAS,EAAEd,MAAM,CAACe,KAAM;UAAA,wBAC3B;YAAK,GAAG,EAAEJ,KAAM;YAAC,GAAG,EAAC,EAAE;YAAC,SAAS,EAAG,GAAEX,MAAM,CAACgB,GAAI;UAAY;YAAA;YAAA;YAAA;UAAA,QAAG,eAChE;YAAK,KAAK,EAAE;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAC,SAAS,EAAC,SAAS;YAAA,wBAClD;cAAK,SAAS,EAAC,mBAAmB;cAAA,UAAEP;YAAI;cAAA;cAAA;cAAA;YAAA,QAAO,eAC/C;cAAK,SAAS,EAAC,EAAE;cAAA,wBACf;gBAAK,SAAS,EAAC,MAAM;gBAAA,UAAC;cAAa;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACzC;gBAAK,SAAS,EAAC,MAAM;gBAAA,UAAEE,QAAQ,CAACF;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAO;YAAA;cAAA;cAAA;cAAA;YAAA,QACvC;UAAA;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UACE,SAAS,EAAG,GAAEV,MAAM,CAACkB,KAAM,aAAYJ,SAAU,oBAAoB;UAAA,UAEpED;QAAM;UAAA;UAAA;UAAA;QAAA,QACH;MAAA,GAfEJ,EAAE;QAAA;QAAA;QAAA;MAAA,QAgBN;IAEV,CAAC,CAAC;EACJ,CAAC,MAAM;IACLL,OAAO,GAAG,yBAAyB;EACrC;EAEA,oBAAO;IAAA,UAAGA;EAAO,iBAAI;AACvB,CAAC;AAAC,KA3CIH,KAAK;AA6CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}